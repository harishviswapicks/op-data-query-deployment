version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: operational_data_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery_worker:
    build: .
    container_name: operational_data_celery_worker
    command: celery -A tasks.celery_app worker --loglevel=info --concurrency=4
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "tasks.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  celery_beat:
    build: .
    container_name: operational_data_celery_beat
    command: celery -A tasks.celery_app beat --loglevel=info
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - redis
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    restart: unless-stopped

  celery_flower:
    build: .
    container_name: operational_data_celery_flower
    command: celery -A tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - redis
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    restart: unless-stopped

volumes:
  redis_data: 